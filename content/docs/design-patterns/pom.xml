<?xml version="1.0" encoding="UTF-8"?>
<!--

    This project is licensed under the MIT license. Module model-view-viewmodel is using ZK framework licensed under LGPL (see lgpl-3.0.txt).

    The MIT License
    Copyright © 2014-2022 Ilkka Seppälä

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in
    all copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
    THE SOFTWARE.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.fuadefendi</groupId>
    <artifactId>patterns</artifactId>
    <version>1.26.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Java Design Patterns</name>
    <description>Java Design Patterns</description>
    <modules>
        <module>active-object</module>
        <module>acyclic-visitor</module>
        <module>aggregator-microservices</module>
        <module>ambassador</module>
        <module>api-gateway</module>
        <module>async-method-invocation</module>
        <module>balking</module>
        <module>business-delegate</module>
        <module>bytecode</module>
        <module>caching</module>
        <module>callback</module>
        <module>circuit-breaker</module>
        <module>client-session</module>
        <module>collecting-parameter</module>
        <module>collection-pipeline</module>
        <module>combinator</module>
        <module>component</module>
        <module>composite-entity</module>
        <module>composite-view</module>
        <module>context-object</module>
        <module>converter</module>
        <module>cqrs</module>
        <module>currying</module>
        <module>dao</module>
        <module>data-bus</module>
        <module>data-locality</module>
        <module>data-mapper</module>
        <module>data-transfer-object</module>
        <module>delegation</module>
        <module>dependency-injection</module>
        <module>dirty-flag</module>
        <module>domain-model</module>
        <module>double-buffer</module>
        <module>double-checked-locking</module>
        <module>double-dispatch</module>
        <module>embedded-value</module>
        <module>event-aggregator</module>
        <module>event-asynchronous</module>
        <module>event-driven-architecture</module>
        <module>event-queue</module>
        <module>event-sourcing</module>
        <module>execute-around</module>
        <module>extension-objects</module>
        <module>factory</module>
        <module>factory-kit</module>
        <module>fanout-fanin</module>
        <module>feature-toggle</module>
        <module>filterer</module>
        <module>fluentinterface</module>
        <module>flux</module>
        <module>front-controller</module>
        <module>game-loop</module>
        <module>gof</module>
        <module>guarded-suspension</module>
        <module>half-sync-half-async</module>
        <module>hexagonal</module>
        <module>identity-map</module>
        <module>intercepting-filter</module>
        <module>layers</module>
        <module>lazy-loading</module>
        <module>leader-followers</module>
        <module>lockable-object</module>
        <module>marker</module>
        <module>master-worker-pattern</module>
        <module>metadata-mapping</module>
        <module>model-view-controller</module>
        <module>model-view-intent</module>
        <module>model-view-presenter</module>
        <module>model-view-viewmodel</module>
        <module>module</module>
        <module>monad</module>
        <module>monitor</module>
        <module>monostate</module>
        <module>multiton</module>
        <module>mute-idiom</module>
        <module>null-object</module>
        <module>object-mother</module>
        <module>object-pool</module>
        <module>page-object</module>
        <module>parameter-object</module>
        <module>partial-response</module>
        <module>pipeline</module>
        <module>presentation-model</module>
        <module>private-class-data</module>
        <module>producer-consumer</module>
        <module>promise</module>
        <module>property</module>
        <module>reactor</module>
        <module>reader-writer-lock</module>
        <module>registry</module>
        <module>repository</module>
        <module>resource-acquisition-is-initialization</module>
        <module>retry</module>
        <module>role-object</module>
        <module>separated-interface</module>
        <module>serialized-entity</module>
        <module>servant</module>
        <module>service-layer</module>
        <module>service-locator</module>
        <module>service-to-worker</module>
        <module>sharding</module>
        <module>spatial-partition</module>
        <module>special-case</module>
        <module>specification</module>
        <module>step-builder</module>
        <module>structural</module>
        <module>subclass-sandbox</module>
        <module>table-module</module>
        <module>testing</module>
        <module>thread-local-storage</module>
        <module>thread-pool</module>
        <module>tolerant-reader</module>
        <module>trampoline</module>
        <module>transaction-script</module>
        <module>twin</module>
        <module>typeobjectpattern</module>
        <module>unit-of-work</module>
        <module>update-method</module>
        <module>value-object</module>
        <module>version-number</module>
    </modules>
    <properties>
        <commons-dbcp.version>1.4</commons-dbcp.version>
        <gson.version>2.10.1</gson.version>
        <guice.version>5.1.0</guice.version>
        <htmlunit.version>2.70.0</htmlunit.version>
        <jacoco.version>0.8.8</jacoco.version>
        <license-maven-plugin.version>4.2</license-maven-plugin.version>
        <maven-checkstyle-plugin.version>3.2.1</maven-checkstyle-plugin.version>
        <maven-surefire-plugin.version>3.0.0</maven-surefire-plugin.version>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <sonar-maven-plugin.version>3.9.1.2184</sonar-maven-plugin.version>
        <sonar.host.url>https://sonarcloud.io</sonar.host.url>
        <sonar.moduleKey>${project.artifactId}</sonar.moduleKey>
        <sonar.organization>iluwatar</sonar.organization>
        <sonar.projectKey>iluwatar_java-design-patterns</sonar.projectKey>
        <sonar.projectName>Java Design Patterns</sonar.projectName>
        <spring-boot.version>2.7.5</spring-boot.version>
        <system-lambda.version>1.1.0</system-lambda.version>
        <urm-maven-plugin.version>2.1.1</urm-maven-plugin.version>
    </properties>
    <dependencies>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
        </dependency>
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
        </dependency>
    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.github.stefanbirkner</groupId>
                <artifactId>system-lambda</artifactId>
                <version>${system-lambda.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${gson.version}</version>
            </dependency>
            <dependency>
                <groupId>com.google.inject</groupId>
                <artifactId>guice</artifactId>
                <version>${guice.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-dbcp</groupId>
                <artifactId>commons-dbcp</artifactId>
                <version>${commons-dbcp.version}</version>
            </dependency>
            <dependency>
                <groupId>net.sourceforge.htmlunit</groupId>
                <artifactId>htmlunit</artifactId>
                <version>${htmlunit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-dependencies</artifactId>
                <version>${spring-boot.version}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <repositories>
        <repository>
            <url>https://jitpack.io</url>
            <id>jitpack.io</id>
        </repository>
    </repositories>
    <build>
        <pluginManagement>
            <plugins>
                <!-- Maven assembly plugin template for all child project to follow -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <executions>
                        <execution>
                            <configuration>
                                <appendAssemblyId>false</appendAssemblyId>
                                <descriptorRefs>
                                    <descriptorRef>jar-with-dependencies</descriptorRef>
                                </descriptorRefs>
                                <!-- below two line make sure the fat jar is sharing the same name
                                                    as of project name -->
                                <finalName>${project.artifactId}</finalName>
                            </configuration>
                            <goals>
                                <goal>single</goal>
                            </goals>
                            <phase>package</phase>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <configuration>
                        <source>17</source>
                        <target>17</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${maven-surefire-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.sonarsource.scanner.maven</groupId>
                    <artifactId>sonar-maven-plugin</artifactId>
                    <version>${sonar-maven-plugin.version}</version>
                </plugin>
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                </plugin>
            </plugins>
        </pluginManagement>
        <plugins>
            <plugin>
                <groupId>com.iluwatar.urm</groupId>
                <artifactId>urm-maven-plugin</artifactId>
                <version>${urm-maven-plugin.version}</version>
                <configuration>
                    <includeMainDirectory>true</includeMainDirectory>
                    <includeTestDirectory>false</includeTestDirectory>
                    <!-- if outputDirectory is not set explicitly it will default to your build dir -->
                    <outputDirectory>${project.basedir}/etc</outputDirectory>
                    <packages>
                        <param>com.iluwatar</param>
                    </packages>
                    <presenter>plantuml</presenter>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>map</goal>
                        </goals>
                        <phase>process-classes</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
                <version>${license-maven-plugin.version}</version>
                <configuration>
                    <properties>
                        <email>iluwatar@gmail.com</email>
                        <owner>Ilkka Seppälä</owner>
                    </properties>
                    <licenseSets>
                        <licenseSet>
                            <excludes>
                                <exclude>**/README</exclude>
                                <exclude>src/test/resources/**</exclude>
                                <exclude>src/main/resources/**</exclude>
                                <exclude>checkstyle-suppressions.xml</exclude>
                            </excludes>
                            <multi>
                                <header>com/mycila/maven/plugin/license/templates/MIT.txt</header>
                                <preamble>
                                    <![CDATA[This project is licensed under the MIT license. Module model-view-viewmodel is using ZK framework licensed under LGPL (see lgpl-3.0.txt).]]></preamble>
                            </multi>
                        </licenseSet>
                    </licenseSets>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>format</goal>
                        </goals>
                        <id>install-format</id>
                        <phase>install</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <executions>
                    <execution>
                        <configuration>
                            <configLocation>google_checks.xml</configLocation>
                            <failOnViolation>true</failOnViolation>
                            <includeTestSourceDirectory>false</includeTestSourceDirectory>
                            <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
                            <violationSeverity>warning</violationSeverity>
                        </configuration>
                        <goals>
                            <goal>check</goal>
                        </goals>
                        <id>validate</id>
                        <phase>validate</phase>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                        <id>prepare-agent</id>
                    </execution>
                    <execution>
                        <goals>
                            <goal>report</goal>
                        </goals>
                        <id>report</id>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
    <inceptionYear>2014-2022</inceptionYear>
</project>
